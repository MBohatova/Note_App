{"id":"js/app.js","dependencies":[{"name":"/Users/maria.bogatova/Desktop/Note App/package.json","includedInParent":true,"mtime":1747574444031},{"name":"./refs.js","loc":{"line":1,"column":21},"parent":"/Users/maria.bogatova/Desktop/Note App/src/js/app.js","resolved":"/Users/maria.bogatova/Desktop/Note App/src/js/refs.js"},{"name":"./openApp.js","loc":{"line":2,"column":24},"parent":"/Users/maria.bogatova/Desktop/Note App/src/js/app.js","resolved":"/Users/maria.bogatova/Desktop/Note App/src/js/openApp.js"},{"name":"./validation.js","loc":{"line":3,"column":31},"parent":"/Users/maria.bogatova/Desktop/Note App/src/js/app.js","resolved":"/Users/maria.bogatova/Desktop/Note App/src/js/validation.js"},{"name":"./theme.js","loc":{"line":4,"column":25},"parent":"/Users/maria.bogatova/Desktop/Note App/src/js/app.js","resolved":"/Users/maria.bogatova/Desktop/Note App/src/js/theme.js"},{"name":"./noteCreate.js","loc":{"line":5,"column":43},"parent":"/Users/maria.bogatova/Desktop/Note App/src/js/app.js","resolved":"/Users/maria.bogatova/Desktop/Note App/src/js/noteCreate.js"},{"name":"./saveNote.js","loc":{"line":6,"column":55},"parent":"/Users/maria.bogatova/Desktop/Note App/src/js/app.js","resolved":"/Users/maria.bogatova/Desktop/Note App/src/js/saveNote.js"},{"name":"./generateNotes.js","loc":{"line":7,"column":48},"parent":"/Users/maria.bogatova/Desktop/Note App/src/js/app.js","resolved":"/Users/maria.bogatova/Desktop/Note App/src/js/generateNotes.js"},{"name":"./eventListeners.js","loc":{"line":11,"column":14},"parent":"/Users/maria.bogatova/Desktop/Note App/src/js/app.js","resolved":"/Users/maria.bogatova/Desktop/Note App/src/js/eventListeners.js"},{"name":"./deleteNote.js","loc":{"line":12,"column":61},"parent":"/Users/maria.bogatova/Desktop/Note App/src/js/app.js","resolved":"/Users/maria.bogatova/Desktop/Note App/src/js/deleteNote.js"},{"name":"./editNote.js","loc":{"line":13,"column":60},"parent":"/Users/maria.bogatova/Desktop/Note App/src/js/app.js","resolved":"/Users/maria.bogatova/Desktop/Note App/src/js/editNote.js"},{"name":"./searchNote.js","loc":{"line":14,"column":79},"parent":"/Users/maria.bogatova/Desktop/Note App/src/js/app.js","resolved":"/Users/maria.bogatova/Desktop/Note App/src/js/searchNote.js"}],"generated":{"js":"\"use strict\";\n\nvar _refs = require(\"./refs.js\");\n\nvar _openApp = require(\"./openApp.js\");\n\nvar _validation = require(\"./validation.js\");\n\nvar _theme = require(\"./theme.js\");\n\nvar _noteCreate = require(\"./noteCreate.js\");\n\nvar _saveNote = require(\"./saveNote.js\");\n\nvar _generateNotes = require(\"./generateNotes.js\");\n\nvar _eventListeners = require(\"./eventListeners.js\");\n\nvar _deleteNote = require(\"./deleteNote.js\");\n\nvar _editNote = require(\"./editNote.js\");\n\nvar _searchNote = require(\"./searchNote.js\");"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"js/app.js","original":{"line":1,"column":0}},{"generated":{"line":5,"column":0},"source":"js/app.js","original":{"line":2,"column":0}},{"generated":{"line":7,"column":0},"source":"js/app.js","original":{"line":3,"column":0}},{"generated":{"line":9,"column":0},"source":"js/app.js","original":{"line":4,"column":0}},{"generated":{"line":11,"column":0},"source":"js/app.js","original":{"line":5,"column":0}},{"generated":{"line":13,"column":0},"source":"js/app.js","original":{"line":6,"column":0}},{"generated":{"line":15,"column":0},"source":"js/app.js","original":{"line":7,"column":0}},{"generated":{"line":17,"column":0},"source":"js/app.js","original":{"line":8,"column":0}},{"generated":{"line":19,"column":0},"source":"js/app.js","original":{"line":12,"column":0}},{"generated":{"line":21,"column":0},"source":"js/app.js","original":{"line":13,"column":0}},{"generated":{"line":23,"column":0},"source":"js/app.js","original":{"line":14,"column":0}}],"sources":{"js/app.js":"import { refs } from './refs.js';\nimport { openApp } from './openApp.js';\nimport { formValidation } from './validation.js';\nimport { setTheme } from './theme.js';\nimport { onCreateButtonClickHandler } from './noteCreate.js';\nimport { onSaveButtonHandler, saveNotesOnServer } from './saveNote.js';\nimport { generateNote, checkIfNotesExist } from './generateNotes.js';\nimport { addEventListenToDeleteAndCancelBtns, \n         addEventListenersToDeleteButtonsOnNotes,\n         addeventListenersToNotes\n       } from './eventListeners.js';\nimport { onDeleteButtonHandler, onCancelButtonHandler } from './deleteNote.js';\nimport { openEditForm, saveEditedNote, closeEditForm } from './editNote.js';\nimport { searchingByBar, onSearchCloseButtonHandler, showSearchingTools } from './searchNote.js';\n\n// all code!\n// const notesFromStorage = localStorage.getItem('notesArr');\n// if(notesFromStorage) {\n//   generateNote();\n// } else {\n//   refs.main.startPageContent.style.display = 'flex';\n// }\n\n// const clearCategoryButtonsColorStyle = () => {\n//   refs.formContainer.tagButton.forEach(tag_button => tag_button.style.color = 'black')\n// }\n\n// function chooseTagColors (e) {\n//   if(refs.formContainer.prevClickedTagButton) refs.formContainer.prevClickedTagButton.style.color = 'black';\n\n//   e.target.style.color = 'white';\n//   refs.formContainer.prevClickedTagButton = e.target;\n//   noteObj.tag = e.target.textContent;\n// }\n\n// refs.main.createBtn.addEventListener('click', onCreateButtonClickHandler);\n\n// function onCreateButtonClickHandler() {\n//   refs.formContainer.formContainer.style.display = 'flex';\n//   refs.main.notFoundContent.style.display = 'none';\n//   refs.header.searchText.value = '';\n//   scrollTo(0, 0);\n\n//   refs.formContainer.tagsBox.removeEventListener('click', chooseTagColors);\n//   refs.formContainer.tagsBox.addEventListener('click', chooseTagColors);\n\n//   noteObj.tag = 'Without tag';\n\n//   clearCategoryButtonsColorStyle();\n\n//   refs.formContainer.saveButton.addEventListener('click', onSaveButtonHandler);\n//   refs.formContainer.backButton.addEventListener('click', onBackButtonHandler);\n// }\n\n// function onBackButtonHandler() {\n//   refs.formContainer.formContainer.style.display = 'none';\n//   refs.formContainer.noteTitle.classList.remove('emptyInput');\n//   refs.formContainer.noteText.classList.remove('emptyInput');\n//   refs.header.searchText.value = '';\n//   refs.formContainer.saveButton.removeEventListener('click', onBackButtonHandler);\n// }\n\n// formValidation(refs.formContainer.noteForm, formInputsArr);\n\n// function onSaveButtonHandler() {\n//   if(refs.formContainer.noteTitle.value.trim() && refs.formContainer.noteText.value.trim() !== '') {\n//     createNote();\n//     saveNotesInLocalStorage();\n//     generateNote();\n//     addeventListenersToNotes();\n//     refs.formContainer.noteTitle.value = '';\n//     refs.formContainer.noteText.value = '';\n//     refs.formContainer.formContainer.style.display = 'none';\n//   } else {\n//     formInputsArr.forEach(function(input) {\n//       if(input.value.trim() === '') {\n//         input.classList.add('emptyInput');\n//       }\n//     });\n//   }\n// }\n\n// function createNote() {\n//   refs.objectAndArray.noteObj.title = refs.formContainer.noteTitle.value.trim();\n//   refs.objectAndArray.noteObj.description = refs.formContainer.noteText.value.trim();\n//   refs.objectAndArray.noteObj.id = new Date().getTime();\n//   refs.objectAndArray.noteObj.time = new Date().toLocaleTimeString('uk-UA');\n//   refs.objectAndArray.noteObj.date = new Date().toLocaleDateString('uk-UA');\n// }\n\n// function saveNotesInLocalStorage() {\n//   let notesFromStorage = localStorage.getItem('notesArr');\n//   if(notesFromStorage) {\n//     let notes = JSON.parse(notesFromStorage);\n//     notes.push(refs.objectAndArray.noteObj);\n//     localStorage.setItem('notesArr', JSON.stringify(notes));\n//   } else {\n//     refs.objectAndArray.notesArr.push(refs.objectAndArray.noteObj);\n//     localStorage.setItem('notesArr', JSON.stringify(refs.objectAndArray.notesArr));\n//   }\n// }\n\n// function generateNote() {\n//   refs.main.startPageContent.style.display = 'none';\n//   refs.main.notesWrapper.style.display = 'flex';\n\n//   refs.main.notesWrapper.innerHTML = '';\n\n//   let notesList = JSON.parse(localStorage.getItem('notesArr'));\n\n//   if (!notesList || notesList.length === 0) {\n//     refs.main.startPageContent.style.display = 'flex';\n//     return;\n//   }\n\n//   notesList.forEach(note => {\n//     let colorTag = note.tag.toLowerCase();\n\n//     refs.main.notesWrapper.insertAdjacentHTML('afterbegin', \n//       `<div id=\"${note.id}\" class=\"main__note ${colorTag}\">\n//         <div class=\"main__headlineAndButtonWrapper\">\n//           <h2 class=\"main__noteHeadline\">${note.title}</h2>\n//           <button class=\"main__deleteButton\"></button>\n//         </div>\n//         <div class=\"main__dateCategory--wrapper\">\n//           <p class=\"main__noteDate\">${note.date}</p>\n//           <p class=\"main__noteCategory\">${note.tag}</p>\n//         </div>\n//       </div>`);\n\n//       addEventListenersToDeleteButtonsOnNotes();\n//   });\n// }\n\n// function addEventListenersToDeleteButtonsOnNotes() {\n//   main__deleteButton = document.querySelectorAll('.main__deleteButton');\n//   main__deleteButton.forEach(button => {\n//     button.removeEventListener('click', addEventListenToDeleteAndCancelBtns);\n//     button.addEventListener('click', addEventListenToDeleteAndCancelBtns);\n//   });\n// }\n\n// function addEventListenToDeleteAndCancelBtns(event) {\n//   event.stopPropagation();\n//   refs.deleteMessageWrapper.deleteMessageWrapper.style.display = 'flex';\n\n//   let noteId = event.target.closest('.main__note').id;\n//   let noteElement = document.getElementById(noteId);\n\n//   if(refs.eventHandlers.currentDeleteHandler) refs.deleteMessageWrapper.deleteButton.removeEventListener('click', refs.eventHandlers.currentDeleteHandler);\n//   if(refs.eventHandlers.currentCancelHandler) refs.deleteMessageWrapper.cancelButton.removeEventListener('click', refs.eventHandlers.currentCancelHandler);\n\n//   refs.eventHandlers.currentDeleteHandler = () => onDeleteButtonHandler(noteElement);\n//   refs.eventHandlers.currentCancelHandler = () => onCancelButtonHandler();\n\n//   refs.deleteMessageWrapper.deleteButton.addEventListener('click', refs.eventHandlers.currentDeleteHandler);\n//   refs.deleteMessageWrapper.cancelButton.addEventListener('click', refs.eventHandlers.currentCancelHandler);\n// }\n\n// function onDeleteButtonHandler(noteElement) {\n//   let notesFromStorage = localStorage.getItem('notesArr');\n//   let storageArr = JSON.parse(notesFromStorage);\n//   let noteI = storageArr.findIndex(storedNote => storedNote.id === parseInt(noteElement.id));\n\n//   if (noteI !== -1) {\n//     storageArr.splice(noteI, 1);\n//     localStorage.setItem('notesArr', JSON.stringify(storageArr));\n//   }\n//   noteElement.remove();\n//   refs.deleteMessageWrapper.deleteMessageWrapper.style.display = 'none';\n\n//   if(storageArr.length === 0) {\n//     refs.main.startPageContent.style.display = 'flex';\n//   }\n// }\n\n// function onCancelButtonHandler() {\n//   refs.deleteMessageWrapper.deleteMessageWrapper.style.display = 'none';\n// }\n\n// addeventListenersToNotes();\n\n// function addeventListenersToNotes() {\n//   let notesFromLocalSt = JSON.parse(localStorage.getItem('notesArr'));\n//   let notesFromHTML = document.querySelectorAll('.main__note');\n\n//   notesFromHTML.forEach(note => {\n//     let noteObject = notesFromLocalSt.find(item => item.id.toString() === note.id);\n\n//     let openFormToEdit = () => openEditForm(noteObject, notesFromLocalSt);\n//     if (noteObject) {\n//       note.removeEventListener('click', openFormToEdit);\n//       note.addEventListener('click', openFormToEdit);\n//     }\n//   });\n// }\n\n// function openEditForm(noteObject, notesFromLocalSt) {\n//   scrollTo(0, 0);\n//   refs.editFormContainer.editFormContainer.style.display = 'flex';\n//   refs.editFormContainer.editTitle.value = noteObject.title;\n//   editText.value = noteObject.description;\n\n//   let editForm = document.getElementById('editForm');\n//   formValidation(editForm, editFormInputs);\n\n//   if(refs.eventHandlers.currentEditBackHandler) refs.editFormContainer.editBackButton.removeEventListener('click', refs.eventHandlers.currentEditBackHandler);\n//   if(refs.eventHandlers.currentEditSaveHandler) refs.editFormContainer.editSaveButton.removeEventListener('click', refs.eventHandlers.currentEditSaveHandler);\n\n//   refs.eventHandlers.currentEditBackHandler = () => closeEditForm();\n//   refs.eventHandlers.currentEditSaveHandler = () => saveEditedNote(noteObject, notesFromLocalSt);\n\n//   refs.editFormContainer.editBackButton.addEventListener('click', refs.eventHandlers.currentEditBackHandler);\n//   refs.editFormContainer.editSaveButton.addEventListener('click', refs.eventHandlers.currentEditSaveHandler);\n// }\n\n// function saveEditedNote(noteObject, notesFromLocalSt) {\n//   let currentNotes = JSON.parse(localStorage.getItem('notesArr')) || [];\n\n//   if(refs.editFormContainer.editTitle.value.trim() && editText.value.trim() !== '') {\n//     noteObject.title = refs.editFormContainer.editTitle.value.trim();\n//     noteObject.description = editText.value.trim();\n//     noteObject.time = new Date().toLocaleTimeString('uk-UA');\n//     noteObject.date = new Date().toLocaleDateString('uk-UA');\n\n//     let noteIndex = currentNotes.findIndex(item => item.id === noteObject.id);\n//     if (noteIndex !== -1) {\n//       currentNotes[noteIndex] = noteObject;\n//     }\n//     localStorage.setItem('notesArr', JSON.stringify(currentNotes));\n\n//     generateNote();\n//     addeventListenersToNotes()\n//     closeEditForm();\n//   } else {\n//     editFormInputs.forEach(function(input) {\n//       if(input.value.trim() === '') {\n//         input.classList.add('emptyInput');\n//       }\n//     });\n//   }\n// }\n\n// function closeEditForm() {\n//   refs.editFormContainer.editFormContainer.style.display = 'none';\n//   refs.editFormContainer.editBackButton.removeEventListener('click', refs.eventHandlers.currentEditBackHandler);\n//   refs.editFormContainer.editSaveButton.removeEventListener('click', refs.eventHandlers.currentEditSaveHandler);\n// }\n\n// refs.header.searchBtn.addEventListener('click', showSearchingTools);\n\n// function showSearchingTools() {\n//   refs.header.searchBtn.style.display = 'none';\n//   refs.header.searchBarWrapper.style.display = 'flex';\n// }\n\n// refs.header.searchCloseButton.addEventListener('click', function() {\n//   refs.header.searchBarWrapper.style.display = 'none';\n//   refs.main.notFoundContent.style.display = 'none';\n//   refs.header.searchBtn.style.display = 'block';\n//   refs.header.searchText.value = '';\n//   refs.main.notesWrapper.innerHTML = '';\n//   generateNote();\n//   addeventListenersToNotes();\n// })\n\n// refs.header.searchText.addEventListener('input', searchingByBar);\n\n// function searchingByBar() {\n//   let searchWord = refs.header.searchText.value.toLowerCase();\n//   let noteList = JSON.parse(localStorage.getItem('notesArr')) || [];\n\n//   refs.main.notesWrapper.innerHTML = '';\n\n//   let foundNotes = noteList.filter(note => \n//     note.title.toLowerCase().includes(searchWord)\n//   );\n\n//   if (searchWord === '') {\n//     refs.main.notFoundContent.style.display = 'none';\n//     refs.main.notesWrapper.innerHTML = '';\n//     generateNote();\n//     addeventListenersToNotes();\n//     return;\n//   }\n\n//   if (noteList.length === 0) {\n//     refs.main.startPageContent.style.display = 'flex';\n//     refs.main.notFoundContent.style.display = 'none';\n//     return;\n//   }\n\n//   if (foundNotes.length === 0) {\n//     refs.main.notFoundContent.style.display = 'flex';\n//     refs.main.startPageContent.style.display = 'none';\n//     refs.header.searchBtn.style.display = 'block';\n//     return;\n//   }\n\n//   refs.main.notFoundContent.style.display = 'none';\n//   refs.main.startPageContent.style.display = 'none';\n//   refs.main.notesWrapper.style.display = 'flex';\n\n//   generateFoundNotes(foundNotes);\n//   deleteFoundNotes(foundNotes);\n// }\n\n// function generateFoundNotes(foundNotes) {\n//   foundNotes.forEach(note => {\n//     let colorTag = note.tag.toLowerCase();\n//     refs.main.notesWrapper.insertAdjacentHTML(\n//       'beforeend',\n//       `<div id=\"${note.id}\" class=\"main__note ${colorTag}\">\n//         <div class=\"main__headlineAndButtonWrapper\">\n//           <h2 class=\"main__noteHeadline\">${note.title}</h2>\n//           <button class=\"main__deleteButton\"></button>\n//         </div>\n//         <div class=\"main__dateCategory--wrapper\">\n//           <p class=\"main__noteDate\">${note.date}</p>\n//           <p class=\"main__noteCategory\">${note.tag}</p>\n//         </div>\n//       </div>`\n//     );\n//   });\n\n//   addeventListenersToNotes();\n// }\n\n// function deleteFoundNotes(foundNotes) {\n//   foundNotes.forEach(note => {\n//     document\n//       .getElementById(note.id)\n//       .querySelector('.main__deleteButton')\n//       .addEventListener('click', event => addEventListenToDeleteAndCancelBtns(event));\n//   });\n// }\n\n// document.addEventListener('DOMContentLoaded', function() {\n//   let savedTheme = localStorage.getItem('theme');\n\n//   if(!savedTheme) {\n//     savedTheme = 'dark';\n//   }\n\n//   setTheme(savedTheme);\n// });\n\n// refs.header.themeButton.addEventListener('click', function() {\n//   let currentTheme = document.body.getAttribute('data-theme');\n\n//   let newTheme;\n\n//   if(currentTheme === 'dark') {\n//     newTheme = 'light';\n//   } else {\n//     newTheme = 'dark';\n//   }\n\n//   setTheme(newTheme);\n// })"},"lineCount":null}},"error":null,"hash":"5bb36434f84a67af0ebb8a3d74fb4ed2","cacheData":{"env":{}}}